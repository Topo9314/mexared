# Generated by Django 5.2.1 on 2025-06-22 19:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('activaciones', '0001_initial'),
        ('ofertas', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='activacion',
            name='distribuidor_asignado',
            field=models.ForeignKey(blank=True, help_text='Distribuidor al que se asigna la activación, si aplica.', limit_choices_to={'rol': 'distribuidor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activaciones_asignadas', to=settings.AUTH_USER_MODEL, verbose_name='Distribuidor Asignado'),
        ),
        migrations.AddField(
            model_name='activacion',
            name='oferta',
            field=models.ForeignKey(blank=True, help_text='Oferta de Addinteli usada en esta activación.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activaciones', to='ofertas.oferta', verbose_name='Oferta Aplicada'),
        ),
        migrations.AddField(
            model_name='activacion',
            name='usuario_solicita',
            field=models.ForeignKey(help_text='Usuario que realiza la activación (Admin, Distribuidor, Vendedor).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activaciones_solicitadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Solicitante'),
        ),
        migrations.AddField(
            model_name='activacionerrorlog',
            name='activacion',
            field=models.ForeignKey(blank=True, help_text='Activación asociada, si aplica.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='errores', to='activaciones.activacion', verbose_name='Activación'),
        ),
        migrations.AddIndex(
            model_name='apiwebhooklog',
            index=models.Index(fields=['evento', 'fecha'], name='idx_webhooklog_evento_fecha'),
        ),
        migrations.AddIndex(
            model_name='apiwebhooklog',
            index=models.Index(fields=['status'], name='idx_webhooklog_status'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='usuario',
            field=models.ForeignKey(blank=True, help_text='Usuario que realizó la acción.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='historialactivacion',
            name='activacion',
            field=models.ForeignKey(help_text='Activación asociada al evento.', on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='activaciones.activacion', verbose_name='Activación'),
        ),
        migrations.AddField(
            model_name='historialactivacion',
            name='usuario',
            field=models.ForeignKey(help_text='Usuario que generó el evento.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial_activaciones', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='portabilidaddetalle',
            name='activacion',
            field=models.OneToOneField(help_text='Activación asociada a esta portabilidad.', on_delete=django.db.models.deletion.CASCADE, related_name='portabilidad_detalle', to='activaciones.activacion', verbose_name='Activación'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['iccid'], name='idx_activacion_iccid'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['estado'], name='idx_activacion_estado'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['usuario_solicita', 'fecha_solicitud'], name='idx_activacion_usuario_fecha'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['distribuidor_asignado'], name='idx_activacion_distribuidor'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['codigo_addinteli'], name='idx_act_codigo_add'),
        ),
        migrations.AddIndex(
            model_name='activacion',
            index=models.Index(fields=['lote_id'], name='idx_activacion_lote_id'),
        ),
        migrations.AddConstraint(
            model_name='activacion',
            constraint=models.UniqueConstraint(fields=('iccid',), name='unique_iccid'),
        ),
        migrations.AddConstraint(
            model_name='activacion',
            constraint=models.CheckConstraint(condition=models.Q(('precio_costo__gte', 0)), name='activacion_non_negative_costo', violation_error_message='El precio costo no puede ser negativo.'),
        ),
        migrations.AddConstraint(
            model_name='activacion',
            constraint=models.CheckConstraint(condition=models.Q(('precio_final__gte', 0)), name='activacion_non_negative_final', violation_error_message='El precio final no puede ser negativo.'),
        ),
        migrations.AddIndex(
            model_name='activacionerrorlog',
            index=models.Index(fields=['iccid', 'fecha'], name='idx_errorlog_iccid_fecha'),
        ),
        migrations.AddIndex(
            model_name='activacionerrorlog',
            index=models.Index(fields=['error_tipo'], name='idx_errorlog_tipo'),
        ),
        migrations.AddIndex(
            model_name='activacionerrorlog',
            index=models.Index(fields=['codigo_error_addinteli'], name='idx_errorlog_codigo_add'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['usuario', 'fecha'], name='idx_auditlog_usuario_fecha'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['accion'], name='idx_auditlog_accion'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['entidad', 'entidad_id'], name='idx_auditlog_entidad'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['origen_api'], name='idx_auditlog_origen_api'),
        ),
        migrations.AddIndex(
            model_name='historialactivacion',
            index=models.Index(fields=['activacion', 'fecha'], name='idx_historial_fecha'),
        ),
        migrations.AddIndex(
            model_name='historialactivacion',
            index=models.Index(fields=['accion'], name='idx_historial_accion'),
        ),
        migrations.AddIndex(
            model_name='portabilidaddetalle',
            index=models.Index(fields=['numero_actual'], name='idx_portabilidad_numero'),
        ),
    ]
