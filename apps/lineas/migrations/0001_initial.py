# Generated by Django 5.2.1 on 2025-06-22 19:11

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AsignacionBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_respaldo', models.DateTimeField(auto_now_add=True, help_text='Fecha en que se creó el respaldo.', verbose_name='Fecha de Respaldo')),
            ],
            options={
                'verbose_name': 'Respaldo de Asignación',
                'verbose_name_plural': 'Respaldos de Asignaciones',
            },
        ),
        migrations.CreateModel(
            name='Linea',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal para la línea.', primary_key=True, serialize=False, verbose_name='UUID')),
                ('msisdn', models.CharField(help_text='Número telefónico asociado a la SIM (e.g., +521234567890).', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='El MSISDN debe ser un número telefónico válido (10-15 dígitos, opcionalmente con +).', regex='^\\+?\\d{10,15}$')], verbose_name='Número Telefónico (MSISDN)')),
                ('iccid', models.CharField(db_index=True, help_text='Identificador único de la SIM (19-22 dígitos).', max_length=22, unique=True, validators=[django.core.validators.RegexValidator(message='El ICCID debe ser un número de 19 a 22 dígitos.', regex='^\\d{19,22}$')], verbose_name='ICCID')),
                ('tipo_sim', models.CharField(choices=[('physical', 'SIM Física'), ('esim', 'eSIM')], default='physical', help_text='Indica si la SIM es física o eSIM.', max_length=10, verbose_name='Tipo de SIM')),
                ('categoria_servicio', models.CharField(choices=[('movilidad', 'Movilidad'), ('mifi', 'MiFi'), ('iot', 'IoT'), ('hbb', 'Internet en el Hogar')], default='movilidad', help_text='Categoría de servicio asociado (Movilidad, MiFi, IoT, HBB).', max_length=20, verbose_name='Categoría de Servicio')),
                ('estado', models.CharField(choices=[('idle', 'Nunca Activada'), ('assigned', 'Asignada y Activa'), ('suspended', 'Suspendida'), ('cancelled', 'Cancelada'), ('port-out', 'Portada Fuera'), ('processing', 'Portabilidad en Proceso')], default='idle', help_text='Estado actual de la línea (e.g., asignada, suspendida, portada).', max_length=20, verbose_name='Estado de la Línea')),
                ('fecha_activacion', models.DateTimeField(blank=True, help_text='Fecha en que la línea fue activada.', null=True, verbose_name='Fecha de Activación')),
                ('fecha_suspension', models.DateTimeField(blank=True, help_text='Fecha en que la línea fue suspendida.', null=True, verbose_name='Fecha de Suspensión')),
                ('fecha_baja', models.DateTimeField(blank=True, help_text='Fecha en que la línea fue dada de baja permanentemente.', null=True, verbose_name='Fecha de Baja')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro en el sistema.', verbose_name='Fecha de Registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha de la última actualización del registro.', verbose_name='Fecha de Actualización')),
                ('portability_status', models.CharField(blank=True, choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completada'), ('rejected', 'Rechazada')], help_text='Estado del proceso de portabilidad (e.g., pendiente, procesando).', max_length=20, null=True, verbose_name='Estado de Portabilidad')),
                ('port_in_date', models.DateTimeField(blank=True, help_text='Fecha en que la línea fue portada hacia la plataforma.', null=True, verbose_name='Fecha de Port-in')),
                ('port_out_date', models.DateTimeField(blank=True, help_text='Fecha en que la línea fue portada fuera de la plataforma.', null=True, verbose_name='Fecha de Port-out')),
                ('fecha_ultima_recarga', models.DateTimeField(blank=True, help_text='Fecha de la última recarga registrada.', null=True, verbose_name='Fecha de Última Recarga')),
                ('fecha_vencimiento_plan', models.DateTimeField(blank=True, help_text='Fecha de vencimiento del plan actual.', null=True, verbose_name='Fecha de Vencimiento del Plan')),
                ('dias_disponibles', models.IntegerField(default=0, help_text='Días restantes de vigencia del plan actual.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Días Disponibles')),
                ('datos_consumidos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cantidad de datos consumidos en el plan actual (en MB).', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Datos Consumidos (MB)')),
                ('datos_disponibles', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cantidad de datos disponibles en el plan actual (en MB).', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Datos Disponibles (MB)')),
                ('minutos_consumidos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minutos de voz consumidos en el plan actual.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Minutos Consumidos')),
                ('minutos_disponibles', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minutos de voz disponibles en el plan actual.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Minutos Disponibles')),
                ('sms_consumidos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Mensajes SMS consumidos en el plan actual.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='SMS Consumidos')),
                ('sms_disponibles', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Mensajes SMS disponibles en el plan actual.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='SMS Disponibles')),
            ],
            options={
                'verbose_name': 'Línea de Servicio',
                'verbose_name_plural': 'Líneas de Servicio',
            },
        ),
    ]
