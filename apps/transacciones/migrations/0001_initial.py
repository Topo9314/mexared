# Generated by Django 5.2.1 on 2025-06-22 19:11

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditoriaTransaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CREACION', 'Creación de transacción'), ('MODIFICACION', 'Modificación de transacción'), ('CANCELACION', 'Cancelación de transacción'), ('REINTENTO', 'Reintento de transacción')], help_text='Tipo de acción realizada sobre la transacción.', max_length=20, verbose_name='Tipo de auditoría')),
                ('detalles', models.JSONField(blank=True, default=dict, help_text='Detalles de la acción en formato JSON (e.g., cambios realizados).', verbose_name='Detalles')),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de la acción.', verbose_name='Fecha')),
            ],
            options={
                'verbose_name': 'Auditoría de Transacción',
                'verbose_name_plural': 'Auditorías de Transacciones',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='HistorialSaldo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saldo_antes', models.DecimalField(decimal_places=2, help_text='Saldo del usuario antes de la transacción.', max_digits=12, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Saldo antes')),
                ('saldo_despues', models.DecimalField(decimal_places=2, help_text='Saldo del usuario después de la transacción.', max_digits=12, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Saldo después')),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del cambio de saldo.', verbose_name='Fecha')),
            ],
            options={
                'verbose_name': 'Historial de Saldo',
                'verbose_name_plural': 'Historiales de Saldo',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código ISO 4217 de la moneda (e.g., MXN, USD, EUR).', max_length=3, unique=True, validators=[django.core.validators.RegexValidator(message='El código debe ser un código ISO 4217 válido (e.g., MXN, USD).', regex='^[A-Z]{3}$')], verbose_name='Código')),
                ('nombre', models.CharField(help_text='Nombre completo de la moneda (e.g., Peso Mexicano).', max_length=50, verbose_name='Nombre')),
                ('simbolo', models.CharField(help_text='Símbolo de la moneda (e.g., $, €).', max_length=5, verbose_name='Símbolo')),
                ('tasa_cambio_usd', models.DecimalField(decimal_places=4, help_text='Tasa de cambio respecto al dólar estadounidense (1 unidad = X USD).', max_digits=10, validators=[django.core.validators.MinValueValidator(0.0001)], verbose_name='Tasa de cambio a USD')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha de la última actualización de la tasa de cambio.', verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Moneda',
                'verbose_name_plural': 'Monedas',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='MotivoTransaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único para identificar el motivo (e.g., ERROR_SISTEMA).', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='El código debe contener solo letras mayúsculas, números y guiones bajos.', regex='^[A-Z0-9_]+$')], verbose_name='Código')),
                ('descripcion', models.CharField(help_text='Descripción detallada del motivo de la transacción.', max_length=150, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, help_text='Indica si el motivo está disponible para nuevas transacciones.', verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Motivo de Transacción',
                'verbose_name_plural': 'Motivos de Transacción',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Saldo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Saldo disponible del distribuidor.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cantidad')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del saldo.', verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Saldo',
                'verbose_name_plural': 'Saldos',
            },
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal para la transacción.', unique=True, verbose_name='UUID')),
                ('tipo', models.CharField(choices=[('ASIGNACION', 'Asignación de saldo'), ('RETIRO', 'Retiro de saldo'), ('CONSUMO_API', 'Consumo vía API'), ('DEVOLUCION', 'Devolución de saldo'), ('AJUSTE_MANUAL', 'Ajuste manual'), ('CARGA', 'Recarga de saldo'), ('REVERSO', 'Reverso de transacción')], help_text='Clasificación de la transacción (e.g., asignación, consumo API, reverso).', max_length=30, verbose_name='Tipo de transacción')),
                ('descripcion', models.TextField(blank=True, help_text='Detalles adicionales sobre la transacción.', verbose_name='Descripción')),
                ('comentario_reverso', models.TextField(blank=True, help_text='Comentario obligatorio para transacciones de tipo REVERSO.', null=True, verbose_name='Comentario del reverso')),
                ('monto', models.DecimalField(decimal_places=2, help_text='Cantidad económica de la transacción.', max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Monto')),
                ('tasa_cambio', models.DecimalField(blank=True, decimal_places=4, help_text='Tasa de cambio aplicada si la moneda no es la base (opcional).', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0001)], verbose_name='Tasa de cambio')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EXITOSA', 'Exitosa'), ('FALLIDA', 'Fallida'), ('CANCELADA', 'Cancelada')], default='PENDIENTE', help_text='Estado actual de la transacción.', max_length=20, verbose_name='Estado')),
                ('referencia_externa', models.CharField(blank=True, help_text='Identificador de sistemas externos, como APIs de pago.', max_length=100, null=True, verbose_name='Referencia externa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la transacción.', verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización.', verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Transacción',
                'verbose_name_plural': 'Transacciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
    ]
