# Generated by Django 5.2.1 on 2025-06-22 19:11

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('codigo_id', models.CharField(blank=True, editable=False, max_length=20, unique=True, verbose_name='Código ID')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='El nombre de usuario solo puede contener letras, números y @/./+/-/_', regex='^[\\w.@+-]+$')], verbose_name='Nombre de usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre(s)')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellido(s)')),
                ('telefono', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='Debe incluir lada nacional mexicana (+52) y tener 10 dígitos', regex='^\\+52\\d{10}$')], verbose_name='Teléfono')),
                ('rfc', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='Debe ser un RFC válido', regex='^([A-ZÑ&]{3,4})\\d{6}[A-Z0-9]{3}$')], verbose_name='RFC')),
                ('tipo_documento', models.CharField(blank=True, choices=[('INE', 'INE'), ('Pasaporte', 'Pasaporte'), ('Otro', 'Otro')], max_length=20, verbose_name='Tipo de documento')),
                ('numero_documento', models.CharField(blank=True, max_length=30, verbose_name='Número de documento')),
                ('rol', models.CharField(choices=[('cliente', 'Cliente Final'), ('vendedor', 'Vendedor'), ('distribuidor', 'Distribuidor'), ('admin', 'Administrador')], default='cliente', max_length=20, verbose_name='Rol')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Acceso al panel')),
                ('is_active', models.BooleanField(default=True, verbose_name='Cuenta activa')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de eliminación')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de registro')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('hierarchy_root', models.ForeignKey(blank=True, help_text='Usuario superior jerárquico (Distribuidor o Admin).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to=settings.AUTH_USER_MODEL, verbose_name='Raíz de jerarquía')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='DistribuidorVendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de asignación')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distribuidor_vendedor_creations', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('distribuidor', models.ForeignKey(limit_choices_to={'rol': 'distribuidor'}, on_delete=django.db.models.deletion.CASCADE, related_name='vendedores_asignados', to=settings.AUTH_USER_MODEL, verbose_name='Distribuidor')),
                ('vendedor', models.ForeignKey(limit_choices_to={'rol': 'vendedor'}, on_delete=django.db.models.deletion.CASCADE, related_name='distribuidor_asignado', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Asignación de Vendedor',
                'verbose_name_plural': 'Asignaciones de Vendedores',
            },
        ),
        migrations.CreateModel(
            name='UserChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('create', 'Creación'), ('update', 'Actualización'), ('deactivate', 'Desactivación'), ('reactivate', 'Reactivación')], max_length=50, verbose_name='Tipo de cambio')),
                ('change_description', models.TextField(blank=True, verbose_name='Descripción')),
                ('details', models.JSONField(blank=True, help_text='Cambios específicos en formato JSON, por ejemplo, valores antes y después', null=True, verbose_name='Detalles del cambio')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changes_made', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Registro de cambio de usuario',
                'verbose_name_plural': 'Registros de cambios de usuarios',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username', 'email'], name='users_user_usernam_6a2bb0_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['rol'], name='users_user_rol_5562e3_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['uuid'], name='users_user_uuid_0206f4_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['codigo_id'], name='users_user_codigo__7c6219_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['rfc'], name='users_user_rfc_7735d8_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['hierarchy_root'], name='users_user_hierarc_1d0f9b_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('rol__in', ['cliente', 'vendedor', 'distribuidor', 'admin'])), name='valid_rol'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('email'), name='unique_email_case_insensitive'),
        ),
        migrations.AddIndex(
            model_name='distribuidorvendedor',
            index=models.Index(fields=['distribuidor', 'vendedor'], name='users_distr_distrib_587189_idx'),
        ),
        migrations.AddIndex(
            model_name='distribuidorvendedor',
            index=models.Index(fields=['activo'], name='users_distr_activo_c6da57_idx'),
        ),
        migrations.AddIndex(
            model_name='distribuidorvendedor',
            index=models.Index(fields=['fecha_asignacion'], name='users_distr_fecha_a_8a2d5b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='distribuidorvendedor',
            unique_together={('distribuidor', 'vendedor')},
        ),
        migrations.AddIndex(
            model_name='userchangelog',
            index=models.Index(fields=['user', 'timestamp'], name='users_userc_user_id_56cdd5_idx'),
        ),
        migrations.AddIndex(
            model_name='userchangelog',
            index=models.Index(fields=['change_type'], name='users_userc_change__fa8b1d_idx'),
        ),
        migrations.AddIndex(
            model_name='userchangelog',
            index=models.Index(fields=['changed_by'], name='users_userc_changed_309875_idx'),
        ),
    ]
